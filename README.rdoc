ecore is a content repository implementation in ruby. It's main purpose 
is to replace rails' ActiveRecord mysql mapper in favor of a pseudo 
hierarchical structure stored in xml files.
 
Every content is a node in the content repository and can collect other
nodes again.

ecore is NOT made for large datasets, as it's performance decreases the
more the repository grows, but staying under 1.000.000 entries in production
mode, ecore can be a very handy tool.

==== dependencies

 * nokogiri
 * active_model

==== features

 * compatible to ActiveRecord (uses ActiveModel methods)
 * access handling (you won't get a node, if you don't have access on it)
 * very primitive mutex
 * restore deleted nodes
 * compatible with jruby (with nokogiri-java)

==== next goals

 * journaling (version control for nodes)
 
== Installation

Download this package and run:

  gem build ecore.gemspec

  gem install ecore
  
from the directory where you downloaded ecore to.

== Using ecore

In your application init code add:

  Ecore::Repository.new
  
Additional options, like :repos_path, :logfile, :loglevel can be given.

== Subclassing from Ecore::Node

To create a new model, sublcass your model from Ecore::Node class

  MyNode < Ecore::Node
    string  :title
    integer :status
  end
  
=== Datatypes

available datatypes are <tt>string,integer,float,boolean,time</tt>

datatypes will be converted from strings (e.g. when passed from a form) back to those datatypes.

=== Hooks

  MyNode < Ecore::Node
    before :create, :before_create_action
  end
  
  MyNode < Ecore::Node
    before :save do
      # things to do before save
    end
  end 